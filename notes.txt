# Docker commands
build image: docker build -t flask_test_container :latest .
docker run -d -p 5000:5000 flask_test_container :latest

kubectl run nginx --image nginx
kubectl get pods

kubectl create -f pod-definition.yml
kubectl describe pod myapp-pod
kubectl edit pod redis

Kubectl create -f replicationset-definition.yml
Kubectl get replicaset
Kubectl get replicaset <name>
kubectl edit replicaset new-replica-set

Kubectl replace -f replicationset-definition.yml
Kubectl scale --replica=6 -f replicationset-definition.yml
Kubectl scale --replica=6 -f replicationset myreplicaset


ApiVersion
kind
metadata
spec

## Day 3
Docker deployments
Create an NGINX Pod
kubectl run --generator=run-pod/v1 nginx --image=nginx

Generate POD Manifest YAML file (-o yaml). Don't create it(--dry-run)
kubectl run --generator=run-pod/v1 nginx --image=nginx --dry-run -o yaml

Create a deployment
kubectl create deployment --image=nginx nginx

Generate Deployment YAML file (-o yaml). Don't create it(--dry-run)
kubectl create deployment --image=nginx nginx --dry-run -o yaml

Generate Deployment YAML file (-o yaml). Don't create it(--dry-run) with 4 Replicas (--replicas=4)
kubectl create deployment --image=nginx nginx --dry-run -o yaml > nginx-deployment.yaml

Use existing yml file
kubectl apply -f <name>.yml

# create and edit
create deployment httpd-frontend --image=httpd:2.4-alpine --dry-run=false -o yaml
kubectl edit deployment httpd-frontend

